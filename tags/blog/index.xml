<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on ゆーすけべー日記</title>
    <link>https://yusukebe.com/tags/blog/</link>
    <description>Recent content in Blog on ゆーすけべー日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>© Copyright yusukebe.com</copyright>
    <lastBuildDate>Thu, 16 Jan 2020 10:36:20 +0900</lastBuildDate>
    
	<atom:link href="https://yusukebe.com/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>はてなブログからGitHub Pages&#43;Hugoへ移行した</title>
      <link>https://yusukebe.com/posts/2020/hatenablog-to-githubpages/</link>
      <pubDate>Thu, 16 Jan 2020 10:36:20 +0900</pubDate>
      
      <guid>https://yusukebe.com/posts/2020/hatenablog-to-githubpages/</guid>
      <description>&lt;p&gt;はてなブログで運用してたブログ「ゆーすけべー日記」をGitHub Pagesへ移行した。ドメインも昔使ってた&lt;code&gt;yusukebe.com&lt;/code&gt;にした。
静的ファイルのジェネレーターとしてHugoを使ってる。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginxでリダレイクトの設定をしてデッドリンクを無くす</title>
      <link>https://yusukebe.com/posts/2012/0124090904/</link>
      <pubDate>Tue, 24 Jan 2012 18:09:00 +0900</pubDate>
      
      <guid>https://yusukebe.com/posts/2012/0124090904/</guid>
      <description>このゆーすけべー日記はMovableTypeにしてから3度以上はPermalinkのURLを変更しちゃっています＞＜ 「BlogのURLってどんなのが奇麗なのかなー」と右往左往している様が見て取れますね。一番長く使っていたのが以下の形式です。
 /archives/{年の下2桁}/{月2桁}/{日2桁}/{時2桁}{分2桁}{秒2桁}.html  ただこれだと「ディレクトリ切り過ぎじゃね？2100年以降に対応しないし！」なんて思ってなんとなく。最近移行した時に以下の形式にしました。
 /archives/{年4桁}{月2桁}{日2桁}/{時2桁}{分2桁}{秒2桁}.html  で、それに伴い昔のリンクがもれなく「デッドリンク」と呼ぶのか、404状態になっていたので、さすがに直しました。apache使ってたときは.htaccessをMovableTypeから書き出すなんてやってましたが、nginxで今動かしているので、その手法は使えない。とはいえMovableTypeから.htaccessを作らなくても、上記のURL変換には法則があるので正規表現さえ使えれば置換ができます。nginxは正規表現に柔軟ため以下の設定を一行追加するだけでいけました（見やすくするため2行にわけてます）。
 rewrite &#34;^/archives/(\d{2})/(\d{2})/(\d{2})/(\d{6})\.html&#34; http://yusukebe.com/archives/20$1$2$3/$4.html permanent;  マッチさせる部分をダブルクオーテーションで囲むことがポイントです（じゃないとnginxを起動する時に怒られる）。
nginxの設定はやりやすいですなぁー。とはいえ、Blogに限らずpermalinkのURLは変えちゃーいけませんね！</description>
    </item>
    
    <item>
      <title>Blogアクセスアップのための種まき</title>
      <link>https://yusukebe.com/posts/2012/0124015731/</link>
      <pubDate>Tue, 24 Jan 2012 10:57:00 +0900</pubDate>
      
      <guid>https://yusukebe.com/posts/2012/0124015731/</guid>
      <description>今、会社のHPともあわせ親父とこのBlogのちょっとした改修を行っている。
目標の一つにアクセスアップがあり、そのために閲覧者一人あたりのPVをアップさせる戦略をとる。
以前とあるサイトのPVを10倍以上にあげた経験から3つ仮説を立てる。これをすれば「一人あたりのPVは上がる」だろうということだ。
 ページ当たりのコンテンツを最適な量にしてシンプルに保つ ページの表示速度を速くする  ページとページの関連を作る（リンクを張る）  そのとあるWebサイトの結果はGoogle Analyticsの3年間のグラフを見れば明らかだ。
お気づきの通り、これら3つの仮説は、情報商材販売サイトを除いた「私はこうしてアクセスを上げました」といった良質なBlog記事を見れば書かれてるしごく当たり前のことではある。ただ実体験したことなのでかなり気にしながら今回の改修を行っている。
例えば、Blogにおいてはその記事において、同一カテゴリーの最新エントリー5件を文章の下に配置するなどである。より、目にとまりやすいようにはてなブックマークの「users」を表示するためにはMovableTypeで以下のようなタグを書くとよい。
 &amp;lt;mt:If tag=&#34;CategoryLabel&#34;&amp;gt; &amp;lt;mt:SetVars&amp;gt; category_label=&amp;lt;$mt:CategoryLabel$&amp;gt; &amp;lt;/mt:SetVars&amp;gt; &amp;lt;mt:SetVarBlock name=&#34;category_count&#34;&amp;gt; &amp;lt;mt:Categories&amp;gt; &amp;lt;mt:If tag=&#34;CategoryLabel&#34; eq=&#34;$category_label&#34;&amp;gt;&amp;lt;$MTCategoryCount$&amp;gt;&amp;lt;/mt:If&amp;gt; &amp;lt;/mt:Categories&amp;gt; &amp;lt;/mt:SetVarBlock&amp;gt; &amp;lt;mt:If name=&#34;category_count&#34;&amp;gt; &amp;lt;div class=&#34;related-entries&#34;&amp;gt; &amp;lt;h2&amp;gt;カテゴリー「&amp;lt;$mt:CategoryLabel$&amp;gt;」のエントリー&amp;lt;/h2&amp;gt; &amp;lt;mt:Entries category=&#34;$category_label&#34; lastn=&#34;5&#34;&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&#34;&amp;lt;$mt:EntryPermalink$&amp;gt;&#34;&amp;gt;&amp;lt;mt:EntryTitle&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;a href=&#34;http://b.hatena.ne.jp/entry/&amp;lt;$mt:EntryPermalink$&amp;gt;&#34;&amp;gt; &amp;lt;img src=&#34;http://b.hatena.ne.jp/entry/image/&amp;lt;$mt:EntryPermalink$&amp;gt;&#34;&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/mt:Entries&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/mt:If&amp;gt; &amp;lt;/mt:If&amp;gt;  こういったMovableTypeのTipsも当たり前のようにやられてはいるが、上記の仮説から導きだした対策だと考えると納得がいく。
さらに、親父のBlogを分析していると検索キーワード経由の流入は多いが、リピーターが少ない。そのためによりパーソナリティとしての信頼度を上げる工夫をしようと思う。具体的には以下を施した。
 ソーシャルボタンの追加 プロフィールの充実 外部サービスの表示（Twitterのプロフィールなど）  ただ、問題として、ソーシャルボタンや外部サービスと連携すると折角MovableTypeで書き出した静的HTMLの表示が重たくなってしまう。親父のブログは対策を考え中であるが、このBlogに関しては、現在トップページに「はてぶボタン」のみ、パーマリンクには、それに加えてTwitter、Facebookのパーツが表示されるようになっている。これでだいぶトップの表示が速くなった。
さて、こうした「種まき」の結果を計測するにはGoogle Analyticsで行おう。新しいバージョンでは、「リアルタイム」機能までついているし、レポートの左側は順番に追っていけばサイトの分析が自然にできるように出来てる。特にこうした改修をした場合、「コンテンツ」というカテゴリを見れば、サイトコンテンツ、速度などを一覧や比較可能だ。
優秀な計測ツールのおかげで、とりわけコンテンツを持っているWebサイトは「種まき→計測→フィードバック」というループができて面白い。この種まきで何か興味深い結果が出たら報告します。</description>
    </item>
    
    <item>
      <title>マキコミの技術</title>
      <link>https://yusukebe.com/posts/2010/1222001107/</link>
      <pubDate>Wed, 22 Dec 2010 09:11:00 +0900</pubDate>
      
      <guid>https://yusukebe.com/posts/2010/1222001107/</guid>
      <description>   4年前、@amachangと同級生つまり1981年生まれってことを知ってチャットしたのがキッカケ。 じゃ81生まれ前後で集まろうてことでツイッターで呼びかけて忘年会をやったら100人近くが集まって今年も継続。 同じくらいの年の仲間が見つかった気がするね(ツイッター/@yusukebe)   という体験談を寄稿したものだから代わりに献本させてもらって、 さらには出版記念パーティにも参加したという、 「マキコミの技術」。 ネタフルのコグレさん、みたいもんのいしたにさんの共著です。   マキコミの技術 posted with yusukebe.com::AmazonSearch on 2010.12.22 コグレマサト いしたにまさき  単行本（ソフトカバー） / インプレスジャパン  Amazon 売り上げランキング: 517  Amazon.co.jpで詳細を見る      基本的にはソーシャルマーケティングの本だけど、今回はとりわけツイッターを使った、 人をマキコんだ運動や行動、PRについて書かれています。 僕が前から思っていたことを、本という形で「体現してくれた」ものだと思います。 速読してみたんですが、20分くらいで読めるいい意味でライトないい本です。  マキコミには「共感」が重要なので、僕がマキコミの技術を読んで共感した点を引用させていただきます。   ここ一〜二年の間に、このようにネット上での会話から直接リアルの行動につながることが増えています。   ネットのリアルの敷居が低くなり、所謂「オフ会の気持ち悪さ」も無くなって来たと思いますねー。   お互いのことがわかるから、会っていきなり本題に入れる   すげーわかります。僕の体験談にもある81忘年会とかでちょこちょこっとしかあわない友達でもなんとなく 「仲間」って意識がありますからねー。    広いネットの中では「ペイ・フォワード」で   ギブ&amp;amp;テイクじゃなくてギブ&amp;amp;ギブの精神でネットの情報発信を考えるといいよという時に、 映画にもなった「ペイ・フォワード」という概念がでてきます。 まさにそうだと思います。ソーシャルなネットワークが「可能な王国」に近いコミュニケーションを作っているのです。   Keep on blogging.   裏表紙にあるフレーズです。ツイッターのことが多く書かれてる本ですが、 ツイッターが情報の蓄積という面でフローであることに対して、 スタック的であるブログも重要だよねーと主張されています。 そして続けることが大事だと。 共感することはもちろん、その精神にかっこいいなーと思いますし、真似したいと思います。 「ブログを書く事を続けること、やめないこと」。僕は常にブログというプラットフォームで何かを表現していきたいです。  その他たくさん共感するところがありましたが、まぁこんなところで。 付け加えると日産やサントリーさんのソーシャルマーケティング体験談があったりして、 ビジネスのところの話も入れ込むのがさすがだなーって思いました。  出版記念パーティで筆者のお二人と話させてもらったのですが、 ほんと「いいお兄さん」という感じで、是非今後ともマキコまれて、マキコミたいなと思いました! とりあえず、お二人ともお疲れさまです! </description>
    </item>
    
    <item>
      <title>それでも僕がBlogを書く理由</title>
      <link>https://yusukebe.com/posts/2010/1123101347/</link>
      <pubDate>Tue, 23 Nov 2010 10:13:00 +0900</pubDate>
      
      <guid>https://yusukebe.com/posts/2010/1123101347/</guid>
      <description>  まずはあえて消去法で。  Twitterだと140文字しか書けない。例えばエンジニアだとしてコードを全て書けないかもしれない。 というか大抵納まらない。つぶやくことはできるが意図を伝えるものとして140文字は少ない。 mixiだと友達の数が200人とかなんで頑張って書いても多くの人に届かない。 Facebookだと友達の数は多いんだけどmixiと同じでGoogleにはひっからないし流れるのが速い。 Ustreamは比較的いろんなことを伝えられるけど基本ライブなのでその時間にいないと価値が下がる。 YouTube用の動画作ってもいいけど、動画は時間を食うし検索されにくいからあとあと面倒。   それぞれのメディアの特性ってのがあって、もちろん今例に挙げた5つのサービスは全て状況に応じて、 ありがたく使っている。だけれどもこの飽きっぽい俺が数年もBlogを書き続けているその理由とは。 俺にとって伝えたいことを比較的、的確に表現できるからだ。 もっと言うと「個人の意図を伝える」ことができると思っている。 現にオンラインで知り合ってオフラインではじめて会うケースで「あーあの人ですね」と納得できるのは、 Blogをしっかりと書いていて前から購読している人が多い。 「個人の意図が伝えられる」からこそ、その人の個性がにじみ出る。  そして、俺のBlogを購読している人とかTwitterでフォローされている人数とかを考慮すると、 個人的にはそこそこの伝搬力があると思っている。 だから何か自分の中で考えがまとまった時、それに対する意見を乞いたい時に、 Blogに書くことをすれば何かしらのリアクションがある。 それを眺めることができるのは批判的な意見も含め非常にいい経験となる。  今「いい経験」という表現をしたが、Blogを書くという行為は文章を書く練習にもなる。 文章を書くのはプレゼンテーションを考えるのにも似ているし、 口で話す骨子を作るのにも似ている。 かなり根本的な技術だと思う。 その練習をできるというのもBlogの素晴らしい点だ。  ちなみに、「Facebookを流行らせたのはぼくです」というふざけたタイトルで、 YAPC::Asia 2010 の Lightning Talks で一本しゃべらせてもらった時に伝えたことはこういうことだ。  人に強制的に何かを勧めることはしたくないけれど、 伝えることがある人、文章を書くことで自分を鍛えたいはBlogをすぐに始めるといいかもしれない。 最初は見る人が少なくても数年続ければ納得できるほどの閲覧者を集められるかもしれない。  参考ページ  ネット時代の「ムーブメント」という目的 - ゆーすけべー日記 YouTube - Yusuke Wada LT - Facebookを流行らせたのはぼくです  </description>
    </item>
    
    <item>
      <title>コードとかをブログで晒す意味 - dankogaiと私</title>
      <link>https://yusukebe.com/posts/2010/0708005408/</link>
      <pubDate>Thu, 08 Jul 2010 09:54:00 +0900</pubDate>
      
      <guid>https://yusukebe.com/posts/2010/0708005408/</guid>
      <description>Perlやり始めて4年くらい経つんでもう初心者ってほどではないという立場から言ってみます。 「コードとかプログラミングに関することをブログに晒すってすごくいい」と思います。 最近Twitterがあるもんで、情報の発信の力をそちらに取られている感があって若干悲しいので、 もっとブログ使った方がいいと考えるのです。 で、コードを晒したりすると何が嬉しいって、とにかく自分が成長できます。 そしてお友達が増えます。ただそれだけだけどすっごく重要。 俺はそれで成長できたし、あの！dankogaiさんとお友達？になって雑誌での対談まではたしちゃいました。 というエピソードを例に挙げるんで参考にしてくださいね。  # まぁ、dankogaiさんと言ってもただのエロ親父なんですけどね^^; 本人には内緒だよ！ 2007/8/3 ニコニコ動画をダウンロードするPerlスクリプトのコードをブログに書く  Perl、割とかじり始めの俺がニコニコ動画のflvをダウンロードしちゃうイケナイスクリプトをブログに晒す。 正直今見るとひどいコードだ。  Perlでニコニコ動画のflvとコメントxmlをダウンロードする (Yusukebe::Tech) 2007/8/4 dankogaiさんに添削される、コード量半分くらいになる  ニコ厨のdankogaiさんが即座に反応。 「勝手に添削」シリーズとして添削され、コード量が半分くらいになったし、少なくなっただけじゃなく スマート！ぶっちゃけると一瞬、怒られた感じがして腹が立ったが、ちょっとするとすげー！こんな風に書けるんだ！すげー！ってなり感動する。  404 Blog Not Found:perl - 勝手に添削 - ニコニコ動画ダウンローダー 2007/10/1 Shibuya.pm Tech Talk #8 で dankogai 氏と初めて会う  日本最大のPerlコミュニティの集まり「Shibuya.pm Tech Talk #8」であまり空気を読まず、 いきなり「リビドー駆動開発によるPlaggerとCatalystを使ったサイト開発」という題名でLightning Talkをする。 とにかく発表がひどかった。途中のトイレ休憩でdankogaiさんと隣になり、おそるおそる「添削してくれてありがとうございます」と言うと、なんだかよくわからない返答をされる。 発表が終わって、解散の時に再びdankogai氏に話かけられる。 「コード何行書く度にヌイテるの？」一瞬意味が分からずキョドってしまい反応できず...  Shibuya.pm tech talk #8 で 「リビドー駆動開発によるPlaggerとCatalystを使ったサイト開発」を発表してきました - ゆーすけべー日記 2009/9/11 YAPC::Asia 2009 東工大会場にてWEB+DB PRESSの連載でdankogai氏と対談が実現  WEB+DB PRESS vol.53 内「アルファギークに逢いたい」のゲストとして俺が採用され、 YAPC::Asia 2009 の東工大内で対談が行われる。 内容は主にエロについて。dankogai氏がエロ漫画いいよっていってたのが印象に残っている。 この頃からなんかまともに話せるようになった気がするよ。  本日発売の「WEB+DB PRESS vol53」の「アルファギークに逢いたい」のゲストは俺です - ゆーすけべー日記 現在  と、まぁ現在に至るわけですが、 たったひとつのスクリプトをブログに晒したおかげで、dankogaiさんと友達になれただけじゃなくって、 いろいろと輪が広がったんですよ。 そしてすごい成長するキッカケとなりました。 だから特にプログラミングを志す方は是非、自分のブログを持ってない人は持って、 ブログでコードとかプログラミングについての話題を「晒す」といいと思います。  「ただ」、問題なのはその記事がハイレベルな人にフックするか、ひっかかるかってことがないと どうしょもないです。 だからこそ面白いアイデアのスクリプトなりなんなりを公開するという努力が必要かと思うのです。 難しいかもしれませんが、見てる人はきっと見てるので続けるといいと思いますし、 俺の場合、Perlの話題だったらなるべく追うようにしていますから、 ブログ書いたら教えてくれるとみちゃいますよー。  ということで、Enjoy!</description>
    </item>
    
  </channel>
</rss>