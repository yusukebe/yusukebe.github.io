{
    "data" :  {
    "title": "「これ☆ほしい」BugFix &amp; タイムライン機能追加 &amp; 評価とコメントお願いします",
    "date": "2007-09-16 16:06:00 +0900 JST",
    "dir": "posts/2007/",
    "slug": "0916070637",
    "categories": ["tech"],
    "tags": ["Perl"]
}

---



<p>
  ウェブで話題の「みんなの物欲」がひとめでわかるサイト『<strong><a href="http://pulpsite.net/wewantit/">これ☆ほしい</a></strong>』(<a href="http://yusukebe.com/archives/07/09/10/194208.html">リリース</a>)。
  エントリー情報が更新されないというバグ(？)を修正しました。
  それに伴い、DBを初期化してしまったので、過去のエントリーのPermalinkがずれてしまいましたが、
  ご了承ください。これで、
  とあるエントリーにUserが新しく「これほしい」とタグをつけてはてブすれば、
  その分カウントが一つ増えるようになりました。
</p>
<p>
  さらに加えて、新機能「<a href="http://pulpsite.net/wewantit/timeline/">タイムライン</a>」を追加してみました。
  これは「これ☆ほしい」に登録された人気エントリーを「時系列Ｘほしいカウント」で
  並べて見ることができるというものです。
  <a href="http://timeline.nifty.com/">@nifty TimeLine</a>
  の<a href="http://webservice.nifty.com/timeline/">API</a>を使っています。
  「ほしいカウント」が5とか6とかのエントリーが多いので下の方はわりとカオスになっちゃってますが、
それを差し引けば、時間別にどんな物が流行ったのかが一目瞭然なのでわりかし面白いかもしれません。
</p>
<p>
  <a href="http://pulpsite.net/wewantit/timeline/">
    <img alt="これ☆ほしい" class="at-xid-6a0133f4781589970b015435b6ec4e970c" src="https://yusukebe.com/archives/a/6a0133f4781589970b015435b6ec4e970c-pi.gif">
  </a>
</p>
<ul>
  <li>
<a href="http://timeline.nifty.com/portal/show/3385/">『これ☆ほしい』人気エントリー タイムライン - @nifty TimeLine</a> ( @niftyのTimeLineページ )</li>
</ul>
<p>
  また、<a href="http://www.tkrb.jp/">つくるぶ</a>というサービスが提供しているサイトスカウターなるものを設置してみました。
</p>
<blockquote>
  <p>
    サイトスカウターは、デベロッパーのみなさんが作成したサイトに設置することで、サイトのPV（サイトスカウターのロード回数）、サイトにアクセスしたユーザーからの評価点やコメントを得ることができるツールです。</p>
  <p>
    <a href="http://www.tkrb.jp/modules/static3/index.php?id=17">サイトスカウター あなたのサイトを診断します -つくるぶ</a>より
  </p>
</blockquote>
<p>
  <b><a href="http://pulpsite.net/wewantit/">「これ☆ほしい」のトップページ</a>などの右サイドに貼り付けてあるので、是非みなさん、
    評価及び、コメントをお願いします。お願いします。お願いします。</b>
  このサイトスカウターの評価＆コメントは「Mashup up Award 3rd」審査の参考になるということなんで、
  みんなのおかげでもしかしたら、もしかするかもよ！
  だから、<b>お願いします。おながいします。お願いします。</b>
</p>
<p>
  <a href="http://pulpsite.net/wewantit/">
    <img alt="これ☆ほしい" class="at-xid-6a0133f4781589970b015435b6ec5a970c" src="https://yusukebe.com/archives/a/6a0133f4781589970b015435b6ec5a970c-pi.gif">
  </a>
</p>
<h4>補足 : コードの話</h4>
<p>
  まず、バグをどうやって直したか、というかバグって呼んでいいのか？
  とりえあずこんな状態でした。
</p>
<blockquote>
  <p>
    公開してから気づいて、速攻で直したんだけど、 これ☆にはちょっとしたバグがありました。 記事が重複して現れるという現象です。 例えば『iPod Touch @ Apple』へのリンクを持つページが3つ登録されちゃうとか。 強引に直して重複は無くなったけど、その代わり更新情報が取れなくなってしまっている現状です。 これはStore-DBICの仕様なのでしょうがない…。 
  </p>
  <p>
    <a href="http://yusukebe.com/archives/07/09/12/231255.html">ゆーすけべー日記: 「これ☆ほしい」公開から2日目でのフィードバックまとめ</a>より
  </p>
</blockquote>
<p>
  解決策として、otsuneさんに教えてもらった、
  「SmartFeedでEntryを一つのFeedにまとめてからStore-DBICする」という方法で直しました。
  config.yamlにSmartFeed::Allを加えて、Store::DBICのruleを設定すればすればOKです。
  Dedupedも不要になりました。
</p>
<pre class="brush: perl"> 
  - module: SmartFeed::All

  - module: Store::DBIC
    rule:
      expression: $args-&gt;{feed}-&gt;id eq 'smartfeed:all'
    config:
      schema_class: Plagger::Schema::SQLite
      connect_info: [ 'dbi:SQLite:/path/to/plagger.db', ]</pre>
<p>
  次に、@nifty TimeLine へ APIを使ってポストする部分について解説。
  「これ☆ほしい」のエントリーからカウントが5以上のものをひっぱってきて、
  まだTimeLineに登録されていなかったら新規「できごと」を作成してポスト、
  登録されていたら「できごと」更新という機能を持つPerlプログラムを作りました。
  それをcronで回しています。
</p>
<p>
  エントリー情報は、
  Plaggerが生成して、Catalyst側で利用しているdbから(Catalystアプリの)DBIx経由で取得しています。
  自分で書いた記事ですが、
  「<a href="http://yusukebe.com/tech/archives/20070810/114119.html">Catalystのモデルを外部スクリプ&amp;トから操作する(Loaderが0.03007の場合) (Yusukebe::Tech)</a>」がもろ参考になります。
  ちなみにTimeLine向けに、dbのEntryテーブルに「timeline_id」というフィールドを追加しました。
  APIを使ってTimeLineにポストする部分はkazeburoさんの
  「<a href="http://blog.nomadscafe.jp/archives/000726.html">WebService::TimeLine</a>」
  を使わせていただきました。
  このniftyのAPI、ちょっとした癖があって、
</p>
<ul>
  <li>タイトルと本文の先頭と末尾に空白が含まれるとポストされない</li>
  <li>タイトルと本文が空だとポストされない</li>
</ul>
<p>
  ので、適当に対策。できあがった、Perlのコード例は以下です。
  Catalystアプリのホームディレクトリから一回層下にあるディレクトリに置いてあります。
</p>
<pre class="brush: perl"> #!/usr/bin/perl

use strict;
use warnings;
use FindBin;
use Path::Class::File;
use DateTime;
use DateTime::Format::W3CDTF;
use WebService::TimeLine;
use URI::Escape;

use lib "$FindBin::Bin/../lib";

my $timeline_id = 'XXXX';
my $api_key = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';

my $db_path = Path::Class::File-&gt;new('./', 'plagger.db')-&gt;absolute;

{
    package MinBuyo::Model::DBIC;
    use base qw/DBIx::Class::Schema::Loader/;
    __PACKAGE__-&gt;connection('dbi:SQLite:' . $db_path);
    __PACKAGE__-&gt;loader_options();
}

my $timeline = WebService::TimeLine-&gt;new( 
                              timeline_key =&gt; $api_key,
                              );

my $entries = MinBuyo::Model::DBIC-&gt;resultset("Entry")-&gt;search();

while( my $entry = $entries-&gt;next ) {

        unless($entry-&gt;timeline_id){
                &amp;create_article($entry);
                print "posted : " . $entry-&gt;link . "\n";
        }else{
                &amp;update_article($entry);
                print "updated : " . $entry-&gt;link . "\n";
        }

}

sub create_article{
        my $entry = shift;
        my $dt = DateTime-&gt;from_epoch( 
                    epoch =&gt; $entry-&gt;date, time_zone =&gt; 'Asia/Tokyo',
	                                 );
        my $title = create_title($entry-&gt;title);
        my $article = $timeline-&gt;create_article(
                  timeline_id =&gt; $timeline_id,
                  title       =&gt; &amp;strip($title),
                  description =&gt; &amp;strip($entry-&gt;body),
                  start_time  =&gt; DateTime::Format::W3CDTF-&gt;format_datetime($dt),
                  end_time    =&gt; DateTime::Format::W3CDTF-&gt;format_datetime($dt),
                  grade       =&gt; $entry-&gt;rate,
                  link =&gt; [$entry-&gt;link]
        ) or die $timeline-&gt;errstr;
        $entry-&gt;timeline_id($article-&gt;{id});
        $entry-&gt;update;
}

sub create_title {
        my $title = shift;
        utf8::decode($title);
        $title = substr($title,0,50);
        utf8::encode($title);
        return $title;
}

sub strip {
        my $str = shift;
        utf8::decode($str);
        $str = "..." unless $str; # if content is null , set '...'
        $str =~ s/^\s*(.*?)\s*$/$1/; # strip white space
        $str =~ s/^　*(.*?)　*$/$1/;
    utf8::encode($str);
        return $str;
}

sub update_article{
        my $entry = shift;
        my $article = $timeline-&gt;update_article(
                    $timeline_id,
                    id =&gt; $entry-&gt;timeline_id,
                    # update properties...
　     );
}</pre>
<p>
以上、とりあえず、
「サイトスカウター＠これ☆ほしい」の評価＆コメントお願いしまつ。
</p>
<ul>
  <li>
    <a href="http://pulpsite.net/wewantit/">これ☆ほしい - みんなの物欲</a>
  </li>
  <li>
    <a href="http://b.hatena.ne.jp/append?http%3A%2F%2Fpulpsite.net%2Fwewantit%2F">
      <img alt="このエントリーをブックマークに追加" class="at-xid-6a0133f4781589970b015435b6ec68970c" src="https://yusukebe.com/archives/a/6a0133f4781589970b015435b6ec68970c-pi.gif">
    </a>
    <a href="http://b.hatena.ne.jp/entry/http://pulpsite.net/wewantit/">
      <img alt="このエントリーを含むはてなブックマーク" class="at-xid-6a0133f4781589970b015435b6ec76970c" src="https://yusukebe.com/archives/a/6a0133f4781589970b015435b6ec76970c-pi.gif">
    </a>
  </li>
</ul>


 
}
