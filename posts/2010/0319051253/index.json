{
    "data" :  {
    "title": "sinatra ライクな MojaMoja(実験的な) を使ってみた",
    "date": "2010-03-19 14:12:00 +0900 JST",
    "dir": "posts/2010/",
    "slug": "0319051253",
    "categories": ["tech"],
    "tags": ["Perl"]
}

---



<p>
tokuhirom が面白い名前の（実験的な）sinatraみたいなframeworkを作ってた。
</p>
<blockquote>
<p>
MojaMoja - (PoC)yet another sinatra-ish framework built on CPAN modules
</p>
<p>
<a href="http://github.com/tokuhirom/MojaMoja">tokuhirom's MojaMoja at master - GitHub</a>
</p>
</blockquote>
<p>
このモジュールは実験的で且つ、
そのうち（近いうち）、miyagawaさんがある意味似た様なPSGI micro web framework <b>kit</b>「Piglet」というものを出すと思われ、
特にMojaMoja使え！っていうエントリーじゃないのでご了承を。
</p>
<p>
まぁ何が面白いって、その名前と、
アプリの最後に
</p>
<pre class="brush: perl"> zigorou;</pre>
<p>
って書くところですね！
zigorou;って書くと、plackup等で利用可能なアプリケーションハンドラを返してくれます。
使いかたしごく簡単で、
</p>

<pre class="brush: perl"> use MojaMoja;

get '/' =&gt; sub {
    return [ 200, [], ['Hello ZIGOROu'] ];
};

zigorou;</pre>
<p>
と書いた zigorou.psgi を保存して、
</p>

<pre class="brush: perl"> plackup zigrou.psgi</pre>

<p>
として <a href="http://localhost:5000/">http://localhost:5000/</a> とかにアクセスすれば「Hello ZIGOROu」が表示されます。
get '/' ...; の部分がルータ/ディスパッチャの役目を果たしているわけですね。
それと面白いのが、__DATA__以下のDATAセクションにテンプレート書ける点ですね。
</p>

<pre class="brush: perl"> use MojaMoja;

get '/hoge' =&gt; sub {
    my $req  = shift;
    my $name = $req-&gt;param('name');
    render('hoge.mt');
};

zigorou;

__DATA__

@@ hoge.mt
hogehoge &lt;?= $name ?&gt;</pre>

<p>
という.psgiを作って、今度は <a href="http://localhost:5000/hoge?name=ZIGOROu">http://localhost:5000/hoge?name=ZIGOROu</a>
にアクセスすると「hogehoge ZIGOROu」が表示されます。
一つの.psgiファイルの中に全て書けますね。
</p>
<p>
で、さっきMojaMojaアプリの「2個目」として作ったのが、
YouTubeのビデオを連続再生するという代物。まぁグリモンとかJSでやれる範囲ですが、
どうしても.psgiでPerfumeをループで見たかったので作ってみました。
</p>

<pre class="brush: perl"> use MojaMoja;
 
get '/' =&gt; sub {
    my $html = render('index.mt');
    res( 200, [ 'Content-Type' =&gt; 'text/html' ], [$html] );
};
 
get '/loop' =&gt; sub {
    my ($req) = @_;
    my $url = $req-&gt;param('url')
      or return [ 302, [ 'Location' =&gt; $req-&gt;base ], [] ];
    my ($video_id) = $url =~ m!watch\?v=([^&amp;]+)!;
    my $html = render('loop.mt');
    res( 200, [ 'Content-Type' =&gt; 'text/html' ], [$html] );
};
 
zigorou;
 
__DATA__
 
@@ index.mt
&lt;html&gt;
&lt;body&gt;
&lt;form action="/loop"&gt;
&lt;label&gt;Enter YouTube Video URL&lt;/label&gt;
&lt;input type="text" name="url" size="80" /&gt;
&lt;input type="submit" /&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
 
@@ loop.mt
&lt;html&gt;
&lt;body&gt;
&lt;object width="640" height="385"&gt;
&lt;param name="movie" value="http://www.youtube.com/v/ $video_id ?&gt;&amp;loop=1&amp;autoplay=1"&gt;&lt;/param&gt;
&lt;param name="allowFullScreen" value="true"&gt;&lt;/param&gt;
&lt;embed src="http://www.youtube.com/v/ $video_id ?&gt;&amp;loop=1&amp;autoplay=1" type="application/x-shockwave-flash" allowfullscreen="true" width="640" height="385"&gt;&lt;/embed&gt;
&lt;/object&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
<p>
このサクっと作れる感がいいですね。
で、上記した通りPigletというPSGI web micro framework <b>kit</b>がでてくるのし、
Mojolicious::Lite でも似た様なことできるので、
真似してもらわなくてもいいですが、
こういう大小フレームワークがあってそれぞれが使いやすくて場合によって使い分けをして、
それでいて全てがPSGI互換であったりするといい感じだと思ったというわけでした。
</p>
<p>
ただ、Perfumeを今すぐ.psgiでループ再生したい人、zigorou;とコードに書きたい人は、
MojaMoja使ってみるのもいいんではないでしょうか。
</p>

<ul>
  <li><a href="http://github.com/tokuhirom/MojaMoja">tokuhirom's MojaMoja at master - GitHub</a></li>
</ul>


 
}
