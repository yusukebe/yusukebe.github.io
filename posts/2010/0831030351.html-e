+++
Categories = ["tech"]
Description = " 個人で作ってるサイトの死活監視を「再び」ちゃんとやろうと思っています。  そこで、Nagios使うまでも無く、KazuhoさんのKazuho@Cybozu Labs: 監視とは継続的なテストである、という話 (もしくは cronlog と"
Tags = ["Perl"]
date = "2010-08-31T12:03:00+09:00"
title = "PerlスクリプトでWebサイト死活管理"
author = "kamawada"
archive = ["2010"]
draft = false
+++


<p>
個人で作ってるサイトの死活監視を「再び」ちゃんとやろうと思っています。
</p>
<p>
そこで、Nagios使うまでも無く、Kazuhoさんの
<a href="http://developer.cybozu.co.jp/kazuho/2010/01/cronlog-52f2.html">Kazuho@Cybozu Labs: 監視とは継続的なテストである、という話 (もしくは cronlog とテストスクリプトを組み合わせた監視手法について)</a>
みてシンプルに死活監視できるよなーと思って、
「Perlスクリプト」を書いてみました。
「死活」のみの監視なんで、サイトが正常では無かったらメールを飛ばすだけでいいという想定です。
設定をYAMLで持たせたかったり、メールをPerlから送りたかったりしたんで、
少しKazuhoさんのやってることより複雑になりましたが、まぁ簡単です。
</p>
<pre class="brush: perl"> #!/usr/bin/perl
use strict;
use warnings;
use LWP::UserAgent;
use Email::Sender::Simple qw(sendmail);
use Email::MIME;
use Try::Tiny;
use YAML qw(LoadFile);
use Path::Class qw( file );

my $file = $ARGV[0] || "config.yaml";
die "Can't open $file" unless ( -f file($file)-&gt;stringify );
my $config = LoadFile( file($file) );
my $ua = LWP::UserAgent-&gt;new( agent =&gt; 'Monita/0.01', timeout =&gt; 30 );

for my $url ( @{ $config-&gt;{url} } ) {
    my $res = $ua-&gt;get($url);
    send_report( $res ) unless $res-&gt;is_success;
}

sub send_report {
    my $res = shift;
    my $email = Email::MIME-&gt;create(
        header =&gt; [
            From    =&gt; $config-&gt;{from},
            To      =&gt; $config-&gt;{to},
            Subject =&gt; $res-&gt;request-&gt;uri . ' : ' . $res-&gt;code,
        ],
        attributes =&gt; { content_type =&gt; 'text/plain', },
        body       =&gt; $res-&gt;status_line,
    );
    try { sendmail($email) }
    catch { my $error = $_; warn $error-&gt;message };
}
 </pre>
<p>
このようなconfig.yamlを用意して
</p>
<pre class="brush: perl"> ---
from: xxxxxx@xxxxxx
to: xxxxxx@xxxxxx
url:
  - http://hoge.com/
  - http://moge.com/

 </pre>
<pre class="brush: perl"> $ ./monita.pl config.yaml
 </pre>
<p>
と実行すればURLのリストにあるサイトで、200番以外のレスポンスを返却した時に、
ステータス情報と共にメールが届きます。
これをcrontabで定期的に実行すればOKですね。
リソースの定期的な把握についてはcactiとかcloudforecastとか使えばいいっすね。
</p>

