+++
Categories = ["tech"]
Description = " はじめに  miyagawa（宮川達彦）さんはスーパーギークの一人です。昨日のLL Decadeでも基調講演なさってました。誰しもmiyagawaさんのようにコードを書きたいと思っているはずです。しかし、僕たちは彼のようにはなれません。な"
Tags = ["Perl"]
date = "2012-08-05T11:45:00+09:00"
title = "miyagawanize2"
author = "kamawada"
archive = ["2012"]
draft = false
+++


<h3>はじめに</h3>

<p>miyagawa（宮川達彦）さんはスーパーギークの一人です。昨日のLL Decadeでも基調講演なさってました。
誰しもmiyagawaさんのようにコードを書きたいと思っているはずです。
しかし、僕たちは彼のようにはなれません。なぜなら「<strong>紫色の何か</strong>」が欠けているからです。</p>

<h3>紫色の何か</h3>

<p><a href="http://yusukebe.com/archives/2012/08/05/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202012-08-05%2011.46.14.png"><img alt="スクリーンショット 2012-08-05 11.46.14.png" src="http://yusukebe.com/archives/assets_c/2012/08/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202012-08-05%2011.46.14-thumb-400x200-230.png" width="400" height="200" class="mt-image-none" style=""></a></p>

<p><a href="http://yusukebe.com/archives/2012/08/05/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202012-08-05%2011.47.06.png"><img alt="スクリーンショット 2012-08-05 11.47.06.png" src="http://yusukebe.com/archives/assets_c/2012/08/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202012-08-05%2011.47.06-thumb-400x272-232.png" width="400" height="272" class="mt-image-none" style=""></a></p>

<p><a href="http://yusukebe.com/archives/2012/08/05/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202012-08-05%2011.47.14.png"><img alt="スクリーンショット 2012-08-05 11.47.14.png" src="http://yusukebe.com/archives/assets_c/2012/08/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202012-08-05%2011.47.14-thumb-400x345-234.png" width="400" height="345" class="mt-image-none" style=""></a></p>

<p>これは一体なんなんでしょうか？僕には分かりません...
けれど、miyagawaさんのようになるには必要なものです。
そこでmiyagawanize2というWebアプリを作ってみました。</p>

<h3>miyagawanizeの基本</h3>

<p>miyagawanizeでは以下のモジュールを使います。</p>

<pre> use Imager;
use Image::ObjectDetect;
 </pre>

<p>ImagerはPerlらしく画像処理をするためのモジュール。
Image::ObjectDetectはOpenCVの物体検出の部分をPerlから利用できるラッパーモジュールです。
これらを駆使して、対象の人が映った画像の絶妙な場所に紫色の何かを貼付けます。</p>

<p>Image::ObjectDetectでは顔の座標を配列で受け取ることが出来るので、そこに対し、Imagerの操作で画像をオーバーレイさせます。</p>

<pre> for my $face (@faces) {
    my $purple = $purple_source-&gt;scale(
        xpixels =&gt; $face-&gt;{width} / $aspect,
        ypixels =&gt; $face-&gt;{height} / $aspect,
    );
    $image-&gt;rubthrough(
        tx  =&gt; $face-&gt;{width} / $aspect / 2 + $face-&gt;{x},
        ty  =&gt; $face-&gt;{height} / $aspect + $face-&gt;{y},
        src =&gt; $purple,
    );
}
 </pre>

<h4>リアルタイムにmiyagawanize</h4>

<p>今回はさらにWebカムの動画に対してリアルタイムにmiyagawanizeするチャレンジをしてみます。
html5の「getUserMedia API」やWebSocketを使った実装です。
ちなみに「&lt;video&gt; 要素で Media Source API を有効にする」という設定がなされたChromeなどでしか動きません。</p>

<p><a href="http://yusukebe.com/archives/2012/08/05/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202012-08-05%2011.58.25.png"><img alt="スクリーンショット 2012-08-05 11.58.25.png" src="http://yusukebe.com/archives/assets_c/2012/08/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202012-08-05%2011.58.25-thumb-600x379-239.png" width="600" height="379" class="mt-image-none" style=""></a></p>

<p>このような手順でアプリは動きます。</p>

<ol>
<li>0.5秒置きにgetUserMedia APIでWebカムに映った画像を取得</li>
<li>画像をData URLの文字列に変換</li>
<li>WebSocketでサーバへおくる</li>
<li>サーバ側でmiyagawanize</li>
<li>結果の画像をData URLに変換</li>
<li>ブラウザ側に送信</li>
<li>ちくいち描画</li>
</ol>


<h4>実行結果</h4>

<p>サーバを起動し、Chromeでアクセスすると以下の通りmiyagawanizeされた自分が映ります！</p>

<p><a href="http://yusukebe.com/archives/2012/08/05/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202012-08-05%2011.14.07.png"><img alt="スクリーンショット 2012-08-05 11.14.07.png" src="http://yusukebe.com/archives/assets_c/2012/08/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202012-08-05%2011.14.07-thumb-600x276-236.png" width="600" height="276" class="mt-image-none" style=""></a></p>

<h4>まとめ</h4>

<p>miyagawanizeでグレイトなコードが書けるようになるかも！？
この記事はLL DecadeのLTを元に作りました、各種リソースは以下です。</p>

<ul>
<li><a href="http://www.slideshare.net/yusukebe/miyagawanize2">miyagawanize2</a></li>
<li><a href="https://github.com/yusukebe/miyagawanize2">yusukebe/miyagawanize2 · GitHub</a></li>
</ul>


