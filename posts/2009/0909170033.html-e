+++
Categories = ["tech"]
Description = " 前夜祭も終わり(僕の発表した件とかはまた後ほどポスト)、いよいよ明日(というか今日)から YAPC::Asia 2009 開幕！てなわけでなにかと、Twitter上での YAPC に関する発言が気になったりするわけです。そこで、その状況が"
Tags = ["Perl"]
date = "2009-09-10T02:00:00+09:00"
title = "Twitterのハッシュタグ付き発言をIRCに投稿するボットをYAPC::Asia向けに作った"
author = "kamawada"
archive = ["2009"]
draft = false
+++


<p>
前夜祭も終わり(僕の発表した件とかはまた後ほどポスト)、いよいよ明日(というか今日)から YAPC::Asia 2009 開幕！
てなわけでなにかと、Twitter上での YAPC に関する発言が気になったりする
わけです。そこで、その状況が IRC 上でわかれば便利かと思い、
これまたコピペで AnyEvent::* を使ったボットを作ってみました。
ハッシュタグ「#yapc.asia2009」「#yapc」を Stream API からトラックして、発言があると
その内容をほぼリアルタイムに IRC の yapc チャンネルに投稿します。
ソースはこちら。すっごく敏感でいい娘です♡
</p>
<p>
あ、ちなみに、前夜祭はトリを務めさせていただきましたが、
なんと明日YAPCほんちゃん1日目のLTでも最後にトークするっぽいので(しかも英語だよ！)、
2日連続トリということになります。なので、お願いいたします。
あ、弊社ワディットのトークも13:45からあるよ。こちらもよろしく！
</p>

<pre class="brush: perl"> #!/usr/bin/perl
use strict;
use AnyEvent::IRC::Client;
use AnyEvent::Twitter::Stream;
use Encode;

my $user     = 'nanpaman';
my $password = 'hogehoge';
my $channel  = '#yapc.asia-ja';

my $cv = AnyEvent-&gt;condvar;
my $pc = AnyEvent::IRC::Client-&gt;new;
$pc-&gt;reg_cb(
    connect =&gt; sub {
        my ( $pc, $err ) = @_;
        if ( defined $err ) {
            print "Couldn't connect to server: $err\n";
        }
    },
    registered =&gt; sub {
        my ($self) = @_;
        print "registered!\n";
        $pc-&gt;enable_ping(60);
    },
    disconnect =&gt; sub {
        print "disconnected: $_[1]!\n";
    }
);
$pc-&gt;send_srv( "JOIN", $channel );
$pc-&gt;send_chan( $channel, "NOTICE", $channel, "hi" );
$pc-&gt;connect( "irc.freenode.net", 6667,
    { nick =&gt; 'twitter_bot', user =&gt; 'twitter_bot', real =&gt; 'twitter_bot' } );

my $streamer = AnyEvent::Twitter::Stream-&gt;new(
    username =&gt; $user,
    password =&gt; $password,
    method   =&gt; 'filter',
    track    =&gt; '#yapcasia2009,#yapc',
    on_tweet =&gt; sub {
        my $tweet = shift;
        $pc-&gt;send_chan( $channel, "NOTICE", $channel,
            encode( 'utf8', "$tweet-&gt;{user}{screen_name}: $tweet-&gt;{text}" ) );
    },
    on_error =&gt; sub {
        my $error = shift;
        warn "ERROR: $error";
        $cv-&gt;send;
    },
    on_eof =&gt; sub {
        $cv-&gt;send;
    },
);

$cv-&gt;recv;
 </pre>

