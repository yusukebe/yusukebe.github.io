<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge"><title>Twitterのタイムラインをcometでリアルタイムに表示する「Tail-F」を実験的に公開しました - ゆーすけべー日記</title><link rel="icon" type="image/png" href=icons/myicon.png /><meta name="viewport" content="width=device-width, initial-scale=1">
	<meta property="og:title" content="Twitterのタイムラインをcometでリアルタイムに表示する「Tail-F」を実験的に公開しました" />
<meta property="og:description" content=" 以前からやってみたかったことを実験的に公開。現在できていることは、URLを含む全世界中の Twitter 発言を日本語で限定してリアルタイムにだらだらと表示するというもの。Unix/Linux を使っている人はログを tail -f xx" />
<meta property="og:type" content="article" />
<meta property="og:url" content="https://yusukebe.com/posts/2009/0926110713/" />
<meta property="og:image" content="https://yusukebe.com/icons/myicon.png"/>
<meta property="article:published_time" content="2009-09-26T20:07:00+09:00" />
<meta property="article:modified_time" content="2009-09-26T20:07:00+09:00" />
<meta name="twitter:card" content="summary_large_image"/>
<meta name="twitter:image" content="https://yusukebe.com/icons/myicon.png"/>

<meta name="twitter:title" content="Twitterのタイムラインをcometでリアルタイムに表示する「Tail-F」を実験的に公開しました"/>
<meta name="twitter:description" content=" 以前からやってみたかったことを実験的に公開。現在できていることは、URLを含む全世界中の Twitter 発言を日本語で限定してリアルタイムにだらだらと表示するというもの。Unix/Linux を使っている人はログを tail -f xx"/>
<link rel="stylesheet" type="text/css" media="screen" href="https://yusukebe.com/css/normalize.css" />
	<link rel="stylesheet" type="text/css" media="screen" href="https://yusukebe.com/css/main.css" />
	<link rel="stylesheet" type="text/css" href="https://yusukebe.com/css/custom.css" />
	
	<link rel="stylesheet" type="text/css" href="https://yusukebe.com/css/syntax.css" />
	<script src="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js"></script>
	<script src="https://yusukebe.com/js/main.js"></script>
	<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
</head>

<body>
	<div class="container wrapper post">
		<div class="header">
	<h1 class="site-title"><a href="https://yusukebe.com/">ゆーすけべー日記</a></h1>
	<div class="site-description"><h2></h2><nav class="nav social">
			<ul class="flat"><a href="https://github.com/yusukebe" title="Github"><i data-feather="github"></i></a><a href="https://twitter.com/yusukebe" title="Twitter"><i data-feather="twitter"></i></a></ul>
		</nav>
	</div>

	<nav class="nav">
		<ul class="flat">
			
			<li>
				<a href="/">Home</a>
			</li>
			
			<li>
				<a href="/posts">All posts</a>
			</li>
			
			<li>
				<a href="/about">About</a>
			</li>
			
			<li>
				<a href="/tags">Tags</a>
			</li>
			
		</ul>
	</nav>
</div>


		<div class="post-header">
			<h1 class="title">Twitterのタイムラインをcometでリアルタイムに表示する「Tail-F」を実験的に公開しました</h1>
			<div class="meta">Posted at &mdash; Sep 26, 2009</div>
		</div>

		<div class="markdown post-body">
			

<p>
以前からやってみたかったことを実験的に公開。
現在できていることは、
URLを含む全世界中の Twitter 発言を日本語で限定してリアルタイムにだらだらと表示するというもの。
Unix/Linux を使っている人はログを tail -f xxx.log もしくは watch | tail xxx.log なんてコマンドで眺めるのと
同じような感覚で Twitter のタイムラインを見ることができると言えばわかりやすいかも！ということで、
名付けて「<strong>Tail-F</strong>」。
</p>
<p>

</p>
<p>
<a href="http://tail-f.net/">
<img alt="tail-f" class="at-xid-6a0133f4781589970b014e8bd75185970d" src="https://yusukebe.com/archives/.a/6a0133f4781589970b014e8bd75185970d-pi.jpg>
</a>
</p>

<p>
技術的に面白いアーキテクチャになっています。
発言を取得する部分は Twitter の Streaming API 。
ブラウザで閲覧させる部分は comet という技術を使っています。
なので、取得の度に毎回情報を取りにいくいわゆる polling は使用せずに、
long poll といいますか、「つなぎっぱ」の状態を Twitter サイド/表示サイドともに作って利用している形になります。
具体的には、CPAN の
AnyEvent::Twitter::Stream、Continuity と二つのモジュールをフル利用しています。
この2つのモジュールのおかげでかなり短いコードで Stream Server を記述できるのです。
開発は github で行っています。
</p>
<ul>
<li><a href="http://github.com/yusukebe/TailF">yusukebe's TailF at master - GitHub</a></li>
</ul>

<p>
スクリプトレベルでも同じような機能は再現できるので、
試しに書いてみたものを貼付けておきます。
</p>

<pre class="brush: perl"> #!/usr/bin/perl
use strict;
use AnyEvent::Twitter::Stream;
use Continuity;
use Encode;
use utf8;
 
my $user = 'username';
my $password = 'password';
my $done = AnyEvent-&gt;condvar;
 
my @tweets;
 
my $streamer = AnyEvent::Twitter::Stream-&gt;new(
    username =&gt; $user,
    password =&gt; $password,
    method =&gt; 'filter',
    track =&gt; 'http',
    on_tweet =&gt; sub {
        my $tweet = shift;
        if( $tweet-&gt;{text} =~ /[あ-んア-ン]/ ) {
            shift @tweets if( $#tweets &gt; 20 );
            push( @tweets, encode( 'utf8', "$tweet-&gt;{user}{screen_name}: $tweet-&gt;{text}\n" ) );
        }
    },
    on_error =&gt; sub {
        my $error = shift;
        warn "ERROR: $error";
        $done-&gt;send;
    },
    on_eof =&gt; sub {
        $done-&gt;send;
    },
);
 
my $server = Continuity-&gt;new(
    port =&gt; 16001,
    path_session =&gt; 1,
    cookie_session =&gt; 'sid',
    staticp =&gt; sub { $_[0]-&gt;url =~ m/\.(jpg|jpeg|gif|png|css|ico|js|html)$/ },
);
$server-&gt;loop;
$done-&gt;recv;
 
sub main {
    my ($req) = @_;
    my $path = $req-&gt;request-&gt;url-&gt;path;
    print STDERR "Path: '$path'\n";
    pushstream($req) if $path =~ /pushstream/;
}
 
sub pushstream {
    my ($req) = @_;
    while (1) {
        my $log = join "&lt;br /&gt;", @tweets;
        $req-&gt;print($log);
        $req-&gt;next;
    }
}
 
__END__
 </pre>

<p>
だらだら眺めていると普段入ってこないような情報がわかって面白いですね。
逗子のデニーズが閉鎖するなんて悲しい事実ですが、おかげで知ることができました。
てなわけで、Stream 系 API と comet 、もしくは AnyEvent::* と Continuity ( Stardust もいいね ) の組み合わせは
なんか今後も可能性を感じます。
ということで Enjoy!
</p>
<ul>
<li><a href="http://tail-f.net/">Tail-F</a></li>
</ul>


		</div>

		<div class="post-tags">
			
				
					<nav class="nav tags">
							<ul class="flat">
								
								<li><a href="/tags/perl">Perl</a></li>
								
							</ul>
					</nav>
				
			
		</div>
        <div id="fb-root"></div>
<script async defer crossorigin="anonymous" src="https://connect.facebook.net/ja_JP/sdk.js#xfbml=1&version=v5.0&appId=233306523373884&autoLogAppEvents=1"></script>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<script type="text/javascript" src="https://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async="async"></script>

<div class="social-button-area">
  <ul class="social-button">
    <li>
      <a href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-show-count="false">Tweet</a>
    </li>
    <li>
      <span class="fb-share-button"  data-layout="button" data-size="small"><a target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=https%3a%2f%2fyusukebe.com%2fposts%2f2009%2f0926110713%2f;src=sdkpreparse" class="fb-xfbml-parse-ignore">シェア</a></span>
    </li>
    <li>
      <a href="https://b.hatena.ne.jp/entry/" class="hatena-bookmark-button" data-hatena-bookmark-layout="basic-label-counter" data-hatena-bookmark-lang="ja" title="このエントリーをはてなブックマークに追加"><img src="https://b.st-hatena.com/images/v4/public/entry-button/button-only@2x.png" alt="このエントリーをはてなブックマークに追加" width="20" height="20" style="border: none;" /></a>
    </li>
  </ul>
</div>

<div class="disqus-area">
  <div id="disqus_thread"></div>
<script type="application/javascript">
    var disqus_config = function () {
    
    
    
    };
    (function() {
        if (["localhost", "127.0.0.1"].indexOf(window.location.hostname) != -1) {
            document.getElementById('disqus_thread').innerHTML = 'Disqus comments not available by default when the website is previewed locally.';
            return;
        }
        var d = document, s = d.createElement('script'); s.async = true;
        s.src = '//' + "yusukebe-com" + '.disqus.com/embed.js';
        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="https://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
</div>

<ul class="pagination">
  
  <li class="page-item page-prev">
    <a href="https://yusukebe.com/posts/2009/0924023319/" class="page-link" aria-label="Previous"><span aria-hidden="true">← Now, the Plack/PSGI based Application works !</span></a>
  </li>
  
  
  <li class="page-item page-next">
    <a href="https://yusukebe.com/posts/2009/1001030554/" class="page-link" aria-label="Next"><span aria-hidden="true">Twitterで「食べた」を抽出してキーワード表示させる「Kutter」というサンプルアプリをベータ公開しました →</span></a>
  </li>
  
</ul>

	</div>
	<div class="footer wrapper">
	<nav class="nav">
		<div> © Copyright yusukebe.com |  <a href="https://github.com/vividvilla/ezhil">Ezhil theme</a> | Built with <a href="https://gohugo.io">Hugo</a></div>
	</nav>
</div>



<script type="application/javascript">
var doNotTrack = false;
if (!doNotTrack) {
	window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
	ga('create', 'UA-492497-1', 'auto');
	
	ga('send', 'pageview');
}
</script>
<script async src='https://www.google-analytics.com/analytics.js'></script>

<script>feather.replace()</script>
</body>
</html>
