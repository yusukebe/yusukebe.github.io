+++
Categories = ["tech"]
Description = " 非エンジニアだけど一応その志のある弟がとあるWebを更新したいんだけど、それは俺が適当にでっち上げたサイトになってて、彼が今後メンテナやるなら「もうTumblrとかでいいんじゃね？」って思っていたところGitHub Pagesの存在を思い"
Tags = []
date = "2015-11-19T10:15:00+09:00"
title = "GitHub PagesとJekyllの組み合わせの便利さを今更知って勃つ"
author = "kamawada"
archive = ["2015"]
draft = false
+++


<p>非エンジニアだけど一応その志のある弟がとあるWebを更新したいんだけど、それは俺が適当にでっち上げたサイトになってて、彼が今後メンテナやるなら「もうTumblrとかでいいんじゃね？」って思っていたところ<strong>GitHub Pages</strong>の存在を思い出し、触ってみたら、<strong>Jekyll</strong>との組み合わせ次第で、非エンジニアな弟でも更新し続けられるんじゃないか？説が出てきた。それぞれ単体での活用はしていたがGitHub PagesとJekyllを組み合わせて使うことが無くて、しかも最近より進化したっぽいから、今更ながらその便利さにビックリした。</p>

<p></p>
<blockquote class="twitter-tweet" lang="ja">
<p lang="ja" dir="ltr">GitHub PagesとJekyllの組み合わせがくっそ便利でチンコ勃った。ちなみに乳首はいつも勃ってる</p>— Yusuke Wada (@yusukebe) <a href="https://twitter.com/yusukebe/status/666999040702156800">2015, 11月 18</a>
</blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<h2>概要</h2>

<ul>
<li>GitHub Pagesおさらい</li>
<li>Jekyllおさらい</li>
<li>GitHub PagesはJekyllに特別対応している</li>
<li>Jekyllサイトは素の状態からつくった方が把握しやすい</li>
</ul>


<h2>GitHub Pagesおさらい</h2>

<p>GitHub PagesはGitHub上にリモートレポジトリをつくって、そこにあるHTMLや画像ファイルなどを<code>*.github.io</code>というホストでWebとして配信出来る、GitHubが提供している仕組み。<code>git push</code> するだけで自動的にサイトが更新されるのが特徴。場合によっては自分が持っているいわゆる<strong>独自ドメイン</strong>とのマッピングも出来るので、本格的なWebサイトとして公開していくことが可能。自分のユーザーアカウント名やOrganizationを持っていたらそれがそのまま<code>http://yusukebe.github.io/</code>などというようなURLでアクセス出来るし、それぞれが持っているレポジトリプロジェクトの場合は<code>http://yusukebe.github.io/repository-name/</code>となる。なので、前者の場合は個人や組織の紹介ページ、後者の場合はOSSプロダクトのイントロサイトなどで使うと有効かもしれない。ちなみに僕は最近<code>yusuke.be</code>というホストを自分の<strong>ペライチHTML</strong>のGitHub Pagesとマッピングさせて<a href="http://yusuke.be/">http://yusuke.be/</a>を運用している。</p>

<h2>Jekyllおさらい</h2>

<p>Jekyllは良く出来たRuby製の静的サイト構築用のGemライブラリ。静的なWebサイトで面倒なのは複数ページがある時にテンプレートを共通化したいんだけど、良い仕組みがない点。<strong>流石にヘッダーやフッター部分を各ページにコピペするのはありえないでしょ？</strong>なので特にレイアウトの共通化を補助するためにこのようなツールを使うんだけど、Jekyllは</p>

<ul>
<li>自動的に更新があったら逐一ビルトしてくれるようなテスト用のサーバが内蔵</li>
<li>十分な変数とifやforなどの分岐処理をやってくれるテンプレートエンジン</li>
<li>メタ情報付きMarkdownでページ編集可能</li>
</ul>


<p>などが良いっす。あとビルドファイルを工夫すればBlogツールにもなる。ちなみに<a href="http://wada.fm/">http://wada.fm/</a>はJekyll製。だけども... さくらVPSでホストしているのでこれから述べるGitHub Pagesとの連動という恩恵を受けることはなかった...</p>

<h2>GitHub PagesはJekyllに特別対応している</h2>

<blockquote><p>あれ、こんな機能あったっけー？</p></blockquote>

<p>って思って知らないだけかもなんですが、GitHub PagesはJekyll優遇です。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/k/kamawada/20151119/20151119094042.png" alt="f:id:kamawada:20151119094042p:plain" title="f:id:kamawada:20151119094042p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>GitHubレポジトリの設定項目を見ると...「ページを更新するならHTMLを上げるか、Jekyllをpushするとどうたら」と書いてある。これ、要は通常Jekyllで静的サイトをホストさせる場合</p>

<pre class="code" data-lang="" data-unlink> $ jekyll build </pre>


<p>というコマンドで出来たHTML群をApacheなりNginxなどで覗けるサーバーへ転送しなくちゃいけないんだけど... GitHub Pagesの場合<code>jekyll build</code>せずともコンテンツの元となるテンプレートやコンテンツのMarkdownがあれば<code>git push</code>するだけで自動でHTMLを<strong>GitHub側で</strong>ビルドしてそのままGitHub Pagesへ反映してくれる！こりゃ便利！おっ勃つ。例えば非GitHub Pagesとの工程を比較をするとこんな風になる。</p>

<hr>

<p><strong>JekyllとさくらVPSの組み合わせの場合の例</strong></p>

<ol>
<li>Jekyllのテストサーバを使いながらサイト更新</li>
<li>まぁ大抵Gitでソース管理なんで<code>git commit &amp;&amp; git push</code>
</li>
<li>
<code>jekyll build</code>でHTML群を書き出し</li>
<li>rsyncやSCPコマンドでさくらVPSへHTML群転送</li>
<li>さくらVPS上では<strong>別途Webサーバを立てておく必要がある</strong>
</li>
</ol>


<p><strong>JekyllとGitHub Pagesの場合</strong></p>

<ol>
<li>Jekyllのテストサーバを使いながらサイト更新</li>
<li><code>git commit &amp;&amp; git push</code></li>
<li>終わり！</li>
</ol>


<hr>

<p>おおー。簡素！</p>

<h2>Jekyllサイトは素の状態からつくった方が把握しやすい</h2>

<p>で、肝心のJekyllでサイトをつくっていく方法なんだけど、僕はGemでTwitter Bootstrapとか管理するの好きじゃないし、依存やライブラリ独自のルールが増えるの嫌なのでなるべく<strong>素の状態</strong>からJekyllサイトをつくった方がいいと思います。結果、レポジトリのディレクトリ構成もシンプルです。</p>

<pre class="code" data-lang="" data-unlink> iMac@yusuke $ tree ./ -L 1 -F
./
├── Gemfile
├── Gemfile.lock
├── README.md
├── _config.yml
├── _layouts/
├── _site/
├── about/
├── access/
├── index.md
├── static/
└── vendor/ </pre>


<h2>まとめ</h2>

<p>ってことでそれぞれの素晴らしさを知ってたけど、この2つの組み合わせは積極的に使っていこうと思いました！</p>

<h2>ところで宣伝</h2>

<p>全く関係ないトピックだけども、来週、11月24日火 にこんなイベントに登壇します。よろしければ是非〜！</p>

<p><iframe src="//hatenablog-parts.com/embed?url=http%3A%2F%2Feventdots.jp%2Fevent%2F574256" title="『ノマドワーカー・リモートワーク・フリーランス』自由に、カッコよく、たのしく働くエンジニア大解剖勉強会 - dots. [ドッツ]" class="embed-card embed-webcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;"></iframe><cite class="hatena-citation"><a href="http://eventdots.jp/event/574256">eventdots.jp</a></cite></p>

