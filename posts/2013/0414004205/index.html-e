<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge"><title>Devel::KYTProfのログをファイルに書き出して、I/Oのボトルネックを知る - ゆーすけべー日記</title><link rel="icon" type="image/png" href=icons/myicon.png /><meta name="viewport" content="width=device-width, initial-scale=1">
	<meta property="og:title" content="Devel::KYTProfのログをファイルに書き出して、I/Oのボトルネックを知る" />
<meta property="og:description" content=" Webアプリケーションが遅いとか感じる時って、僕の場合、I/Oがボトルネックなケースが多いのです。つまり、MySQLへクエリーを投げて返却を待つとか、memcachedにget/set等のメソッドを発行した時の待ち時間が長くかかってたり." />
<meta property="og:type" content="article" />
<meta property="og:url" content="https://yusukebe.com/posts/2013/0414004205/" />
<meta property="og:image" content="https://yusukebe.com/icons/myicon.png"/>
<meta property="article:published_time" content="2013-04-14T09:42:00+09:00" />
<meta property="article:modified_time" content="2013-04-14T09:42:00+09:00" />
<meta name="twitter:card" content="summary_large_image"/>
<meta name="twitter:image" content="https://yusukebe.com/icons/myicon.png"/>

<meta name="twitter:title" content="Devel::KYTProfのログをファイルに書き出して、I/Oのボトルネックを知る"/>
<meta name="twitter:description" content=" Webアプリケーションが遅いとか感じる時って、僕の場合、I/Oがボトルネックなケースが多いのです。つまり、MySQLへクエリーを投げて返却を待つとか、memcachedにget/set等のメソッドを発行した時の待ち時間が長くかかってたり."/>
<link rel="stylesheet" type="text/css" media="screen" href="https://yusukebe.com/css/normalize.css" />
	<link rel="stylesheet" type="text/css" media="screen" href="https://yusukebe.com/css/main.css" />
	<link rel="stylesheet" type="text/css" href="https://yusukebe.com/css/custom.css" />
	
	<link rel="stylesheet" type="text/css" href="https://yusukebe.com/css/syntax.css" />
	<script src="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js"></script>
	<script src="https://yusukebe.com/js/main.js"></script>
	<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
</head>

<body>
	<div class="container wrapper post">
		<div class="header">
	<h1 class="site-title"><a href="https://yusukebe.com/">ゆーすけべー日記</a></h1>
	<div class="site-description"><h2></h2><nav class="nav social">
			<ul class="flat"><a href="https://github.com/yusukebe" title="Github"><i data-feather="github"></i></a><a href="https://twitter.com/yusukebe" title="Twitter"><i data-feather="twitter"></i></a></ul>
		</nav>
	</div>

	<nav class="nav">
		<ul class="flat">
			
			<li>
				<a href="/">Home</a>
			</li>
			
			<li>
				<a href="/posts">All posts</a>
			</li>
			
			<li>
				<a href="/about">About</a>
			</li>
			
			<li>
				<a href="/tags">Tags</a>
			</li>
			
		</ul>
	</nav>
</div>


		<div class="post-header">
			<h1 class="title">Devel::KYTProfのログをファイルに書き出して、I/Oのボトルネックを知る</h1>
			<div class="meta">Posted at &mdash; Apr 14, 2013</div>
		</div>

		<div class="markdown post-body">
			

<p>Webアプリケーションが遅いとか感じる時って、僕の場合、I/Oがボトルネックなケースが多いのです。つまり、MySQLへクエリーを投げて返却を待つとか、memcachedにget/set等のメソッドを発行した時の待ち時間が長くかかってたり... とかです。そうすると計測して原因を突き止めたくなります。PerlのプロファイラはDevel::NYTProfとか色々ありますが、こうしたI/Oに関しての計測は「<a href="http://search.cpan.org/dist/Devel-KYTProf/">Devel::KYTProf</a>」が便利です。適当な場所にて</p>

<pre> use Devel::KYTProf;
 </pre>

<p>するだけで標準エラー出力に「空気読んで」ウマいこと色付きで、I/O周りのかかった時間とどこの箇所か？を表示してくれます。</p>

<p><img alt="スクリーンショット 2013-04-14 9.44.05.png" src="http://yusukebe.com/archives/2013/04/14/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202013-04-14%209.44.05.png" width="557" height="333" class="mt-image-none" style=""></p>

<p>ただ、この「標準エラー出力に表示」ってのは開発時にターミナルで確認する分には便利なのですが、例えば本番環境などで一時的にパフォーマンスを計測するためにはちょっと不便なことがあります。出来れば確認がしやすいようにファイルに書き出したくなります。Devel::KYTProfではlogメソッドを実装してあるロガーを指定すれば、柔軟に出力を制御出来るので、それを利用してファイルに書き出すことが出来ます。</p>

<p>ネームスペースをどうするか？Mouse使っている！ってのは置いておいて以下のようなロガークラスを定義します。</p>

<pre> package Nopaste::Logger;
use Mouse;
use Log::Dispatch;
use Term::ANSIColor qw/colorstrip/;
use File::Spec;
use Encode;

has 'filename' =&gt; ( is =&gt; 'ro', isa =&gt; 'Str', default =&gt; 'kytprof.log' );
has 'logger' =&gt; ( is =&gt; 'ro', isa =&gt; 'Log::Dispatch', lazy_build =&gt; 1 );

sub _build_logger {
    my $self = shift;
    my $file = File::Spec-&gt;catfile('./log/' . $self-&gt;filename);
    my $log = Log::Dispatch-&gt;new(
        outputs =&gt; [
            [ 'File', min_level =&gt; 'debug', filename =&gt; $file, mode =&gt; 'append' ],
        ],
   );
   return $log;
}

sub log {
    my ($self, %args) = @_;
    my $message = $args{message};
    $message = colorstrip($message);
    $message = encode_utf8($message);
    my $time = scalar localtime;
    $message = "[$time] $message";
    $self-&gt;logger-&gt;debug($message);
}

__PACKAGE__-&gt;meta-&gt;make_immutable();

1;
 </pre>

<p>logクラスでは</p>

<ul>
<li>表示するメッセージを引数から取得</li>
<li>ファイルに書き出すのでカラー表示のためのいらない文字を削除する</li>
<li>エンコード周りの処理</li>
<li>タイムスタンプを追加</li>
</ul>


<p>してからLog::Dispatchを使ってファイルに追加保存していきます。
これをWebアプリのコード内で使います。</p>

<pre> use Devel::KYTProf;
use Nopaste::Logger;

...;

my $logger = Nopaste::Logger-&gt;new;
Devel::KYTProf-&gt;logger($logger);
 </pre>

<p>今回の設定だと、アプリを実行しているディレクトリから見て「./log/kytprof.log」というファイルにログが出力されます。ファイルを覗いてみるとこんな感じ！</p>

<p><img alt="スクリーンショット 2013-04-14 9.57.42.png" src="http://yusukebe.com/archives/2013/04/14/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202013-04-14%209.57.42.png" width="681" height="275" class="mt-image-none" style=""></p>

<p>お、いい感じですね。おかげでmemcachedのgetが異様に時間かかってる！ってのが発見出来たりして面白いです。オレオレで試しでやってみているので他にいい方法があれば教えてください＞＜</p>


		</div>

		<div class="post-tags">
			
				
					<nav class="nav tags">
							<ul class="flat">
								
								<li><a href="/tags/perl">Perl</a></li>
								
							</ul>
					</nav>
				
			
		</div>
        <div id="fb-root"></div>
<script async defer crossorigin="anonymous" src="https://connect.facebook.net/ja_JP/sdk.js#xfbml=1&version=v5.0&appId=233306523373884&autoLogAppEvents=1"></script>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<script type="text/javascript" src="https://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async="async"></script>

<div class="social-button-area">
  <ul class="social-button">
    <li>
      <a href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-show-count="false">Tweet</a>
    </li>
    <li>
      <span class="fb-share-button"  data-layout="button" data-size="small"><a target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=https%3a%2f%2fyusukebe.com%2fposts%2f2013%2f0414004205%2f;src=sdkpreparse" class="fb-xfbml-parse-ignore">シェア</a></span>
    </li>
    <li>
      <a href="https://b.hatena.ne.jp/entry/" class="hatena-bookmark-button" data-hatena-bookmark-layout="basic-label-counter" data-hatena-bookmark-lang="ja" title="このエントリーをはてなブックマークに追加"><img src="https://b.st-hatena.com/images/v4/public/entry-button/button-only@2x.png" alt="このエントリーをはてなブックマークに追加" width="20" height="20" style="border: none;" /></a>
    </li>
  </ul>
</div>

<div class="disqus-area">
  <div id="disqus_thread"></div>
<script type="application/javascript">
    var disqus_config = function () {
    
    
    
    };
    (function() {
        if (["localhost", "127.0.0.1"].indexOf(window.location.hostname) != -1) {
            document.getElementById('disqus_thread').innerHTML = 'Disqus comments not available by default when the website is previewed locally.';
            return;
        }
        var d = document, s = d.createElement('script'); s.async = true;
        s.src = '//' + "yusukebe-com" + '.disqus.com/embed.js';
        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="https://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
</div>

<ul class="pagination">
  
  <li class="page-item page-prev">
    <a href="https://yusukebe.com/posts/2013/0412033033/" class="page-link" aria-label="Previous"><span aria-hidden="true">← Android端末を持ってなくてもエミュレータでGoogle Play配布アプリを動かす</span></a>
  </li>
  
  
  <li class="page-item page-next">
    <a href="https://yusukebe.com/posts/2013/0505004717/" class="page-link" aria-label="Next"><span aria-hidden="true">各種シェアリンク実装まとめ →</span></a>
  </li>
  
</ul>

	</div>
	<div class="footer wrapper">
	<nav class="nav">
		<div> © Copyright yusukebe.com |  <a href="https://github.com/vividvilla/ezhil">Ezhil theme</a> | Built with <a href="https://gohugo.io">Hugo</a></div>
	</nav>
</div>



<script type="application/javascript">
var doNotTrack = false;
if (!doNotTrack) {
	window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
	ga('create', 'UA-492497-1', 'auto');
	
	ga('send', 'pageview');
}
</script>
<script async src='https://www.google-analytics.com/analytics.js'></script>

<script>feather.replace()</script>
</body>
</html>
