+++
Categories = ["tech"]
Description = " Google AJAX Search API ってその名の通り JavaScript から利用することを前提に作られているんだけど、  先ほどドキュメンテーションに「Flash and other Non-Javascript Envir"
Tags = ["Perl"]
date = "2008-04-25T22:58:00+09:00"
title = "JavaScript 環境以外から  Google AJAX Search API を使う"
author = "kamawada"
archive = ["2008"]
draft = false
+++


<p>
Google AJAX Search API ってその名の通り JavaScript から利用することを前提に作られているんだけど、
  先ほどドキュメンテーションに「<strong>Flash and other Non-Javascript Environments</strong>」という項目が追加されました。
JavaScript 以外の環境から Google AJAX Search API をこんな風に使えますよと書かれているようです。
今まで、例えば Perl から Web ページを検索する時には、Google のそれは「JS からしか使えないんでしょ」とあきらめて、Yahoo! の検索 API をよく使っていたところ、これで Google の検索結果も利用できるようになります。
JavaScript のレイヤーより一つ下くらいのところで、API が使えるとなると可能性も広がるかと思います。
ということで、早速、WebService::Simple を使って、Perl から Google AJAX Search API を使ってみたよ。
</p>
<p>
サンプルを紹介する前にこの API の仕様について軽く解説。
ベースURL は
</p>
<blockquote>
<a href="http://ajax.googleapis.com/ajax/services/search/web">http://ajax.googleapis.com/ajax/services/search/web</a>
</blockquote>
<p>
で、それに以下のようなパラメータを渡すと結果が JSON 形式で返ってくる。
</p>
<blockquote>
  <p>
q : 検索クエリー<br>
v : API のヴァージョン、現時点でのデフォルトは 1.0<br>
rsz : 検索結果をどのサイズで返して欲しいか、デフォルトは small の4件、large を指定すると8件<br>
hl : 何語のウェブから検索したいか、日本語の場合だと ja<br>
start : 検索結果を何番目から取得したいか、デフォルトは 0、おそらく最大で 24 っぽい<br>
  </p>
</blockquote>
<p>
詳しくはここを参照→<a href="http://code.google.com/apis/ajaxsearch/documentation/reference.html#_intro_fonje">Class Reference - Google AJAX Search API - Google Code</a>
</p>
<p>
取得できる JSON の形式はこちらを参考に→<a href="http://code.google.com/apis/ajaxsearch/documentation/#fonje">Developer's Guide - Google AJAX Search API - Google Code</a>
</p>
<p>
では、WebService::Simple を使ったサンプルを紹介。
WebService::Simple には JSON のパーサーもあるので検索結果を Dump するだけのスクリプトだったらこんな簡単に書けちゃいます。
</p>
<pre class="brush: perl"> my $google = WebService::Simple-&gt;new(
    base_url        =&gt; "http://ajax.googleapis.com/ajax/services/search/web",
    response_parser =&gt; "JSON",
    params          =&gt; { v =&gt; "1.0", rsz=&gt; "large" }
);

my $response =  $google-&gt;get( { q =&gt; "cat" , start=&gt; 0 } );
print Dump $response-&gt;parse_response;
 </pre>
<p>
次に、検索クエリーを入れるとその結果が表示されるだけの簡単な Web ページを作ってみます。
パースしたコンテンツをそのまま Template::Toolkit のテンプレートに渡すという方針です。
ただ、これを実現するにはちょっとしたハックが必要になりました。
JSON のモジュールを使ってパースされたオブジェクトには utf8 フラグが立ってないっぽいんですよ。
utf8 flagged な値も、TT に渡したいので、混在しちゃうと文字化けしちゃいます（その値を uri フィルターかけたいから、フラグを落としたくないのです、なんか間違ってたらツッコミください）。
そこで、以下のハックで JSON モジュールが返してくれるオブジェクトに utf8 フラグを立ててます。
</p>
<pre class="brush: perl"> use WebService::Simple;
use WebService::Simple::Parser::JSON;

my $parser = WebService::Simple::Parser::JSON-&gt;new; # パーサーを作る
$parser-&gt;{json}-&gt;utf8(1); # utf8 フラグが立ったオブジェクトを返してもらう
my $google = WebService::Simple-&gt;new(
    base_url        =&gt; "http://ajax.googleapis.com/ajax/services/search/web",
    response_parser =&gt; $parser, # パーサーオブジェクトを指定する
    params          =&gt; { v =&gt; "1.0", rsz =&gt; "large", hl =&gt; "ja" }
);
 </pre>
<p>
つまづいたのはこのくらい。完成版のPerl のコードと テンプレートは以下の通りです。
</p>
<p>
search.cgi
</p>
<pre class="brush: perl"> #!/usr/bin/perl

use strict;
use warnings;
use CGI;
use Template;
use WebService::Simple;
use WebService::Simple::Parser::JSON;

my $q     = CGI-&gt;new;
my $query = $q-&gt;param('query');
utf8::decode($query);
my $start = $q-&gt;param('start') || 0;

my $parser = WebService::Simple::Parser::JSON-&gt;new;
$parser-&gt;{json}-&gt;utf8(1);
my $google = WebService::Simple-&gt;new(
    base_url        =&gt; "http://ajax.googleapis.com/ajax/services/search/web",
    response_parser =&gt; $parser,
    params          =&gt; { v =&gt; "1.0", rsz =&gt; "large", hl =&gt; "ja" }
);
my $response = $google-&gt;get( { q =&gt; $query, start =&gt; $start } );

my $tt = Template-&gt;new();
my $html;

$tt-&gt;process(
    "search.tt",
    {
        query    =&gt; $query,
        response =&gt; $response-&gt;parse_response
    },
    \$html
);

print $q-&gt;header( -type =&gt; "text/html", -charset =&gt; "utf-8" );
print $html;

 </pre>
<p>
search.tt
</p>
<pre class="brush: perl"> 
&lt;html&gt;
&lt;body&gt;
&lt;h1&gt;&lt;a href="search.cgi"&gt;Google Search&lt;/a&gt;&lt;/h1&gt;
&lt;form action="" method="get"&gt;
&lt;p&gt;
&lt;input type="text" name="query" value="[% query %]" /&gt;
&lt;input type="submit" value="Google Search" /&gt;
&lt;/p&gt;
&lt;/form&gt;
&lt;p&gt;
[% SET count = response.responseData.cursor.estimatedResultCount -%]
[% IF count -%][% count %] pages[% END -%]
&lt;/p&gt;
&lt;dl&gt;
[% FOREACH item = response.responseData.results -%]
  &lt;dt&gt;&lt;a href="[% item.unescapedUrl %]"&gt;[% item.title %]&lt;/a&gt;&lt;/dt&gt;
  &lt;dd&gt;[% item.content %]&lt;/dd&gt;
[% END -%]
&lt;/dl&gt;
&lt;div&gt;
  [% FOREACH page = response.responseData.cursor.pages -%]
  &lt;a href="?query=[% query | uri %]&amp;amp;start=[% page.start %]"&gt;[% page.label %]&lt;/a&gt;
  [% END -%]
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;

 </pre>

<p>
  ということで、Google AJAX Search API を WebService::Simple 使って利用してみました。
  取得できる件数に制限があるのがちょっと残念ですが、この API なかなか重宝しそうです。
</p>

